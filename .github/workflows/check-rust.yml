name: check rust

on:
  workflow_call:

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings

jobs:
  format:
    name: format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      - name: Install nightly Rust toolchain
        uses: dtolnay/rust-toolchain@0e66bd3e6b38ec0ad5312288c83e47c143e6b09e
        with:
          toolchain: nightly
          components: rustfmt
      - name: Check formatting
        run: cargo +nightly fmt --check

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@0e66bd3e6b38ec0ad5312288c83e47c143e6b09e
        with:
          toolchain: stable
          components: clippy
      - name: Cache dependencies
        uses: Swatinem/rust-cache@e207df5d269b42b69c8bc5101da26f7d31feddb4
        with:
          shared-key: stable-ubuntu-latest
        timeout-minutes: 5
      - name: Check lints
        run: cargo clippy --locked --all-targets -- -D warnings

  test_stable:
    name: test stable
    needs:
      - format
      - lint
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@0e66bd3e6b38ec0ad5312288c83e47c143e6b09e
        with:
          toolchain: stable
      - name: Cache dependencies
        uses: Swatinem/rust-cache@e207df5d269b42b69c8bc5101da26f7d31feddb4
        with:
          shared-key: stable-${{ matrix.platform }}
        timeout-minutes: 5
      - name: Install cargo-nextest
        uses: taiki-e/install-action@7f27b7d8d5665668956bfcdeebcf0ff14480dadd
        with:
          tool: cargo-nextest
      - name: Compile tests
        run: cargo test --locked --no-run
      - name: Run tests
        run: cargo nextest run --locked --all-targets
      - name: Run doctests
        run: cargo test --locked --doc

  test_msrv:
    name: test msrv
    needs:
      - format
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      - id: msrv
        name: Get MSRV from package metadata
        run: awk -F '"' '/rust-version/{ print "version=" $2 }' Cargo.toml >> "$GITHUB_OUTPUT"
      - name: Install ${{ steps.msrv.outputs.version }} Rust toolchain
        uses: dtolnay/rust-toolchain@0e66bd3e6b38ec0ad5312288c83e47c143e6b09e
        with:
          toolchain: ${{ steps.msrv.outputs.version }}
      - name: Install nightly Rust toolchain
        uses: dtolnay/rust-toolchain@0e66bd3e6b38ec0ad5312288c83e47c143e6b09e
        with:
          toolchain: nightly
      - name: Resolve minimal dependency versions instead of maximum
        run: cargo +nightly update -Z direct-minimal-versions
      - name: Set override to MSRV Rust
        run: rustup override set ${{ steps.msrv.outputs.version }}
      - name: Cache dependencies
        uses: Swatinem/rust-cache@e207df5d269b42b69c8bc5101da26f7d31feddb4
        with:
          shared-key: msrv-ubuntu-latest
        timeout-minutes: 5
      - name: Install cargo-nextest
        uses: taiki-e/install-action@7f27b7d8d5665668956bfcdeebcf0ff14480dadd
        with:
          tool: cargo-nextest
      - name: Compile tests
        run: cargo test --locked --no-run
      - name: Run tests
        run: cargo nextest run --locked --all-targets
      - name: Run doctests
        run: cargo test --locked --doc
