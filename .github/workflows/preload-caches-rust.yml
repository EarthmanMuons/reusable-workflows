name: preload caches / rust

on:
  workflow_call:

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings

jobs:
  cache_rust_stable:
    name: cache rust / stable
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@d8352f6b1d2e870bc5716e7a6d9b65c4cc244a1a
        with:
          toolchain: stable
      - name: Cache dependencies
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84
        with:
          shared-key: stable-${{ matrix.platform }}
        timeout-minutes: 5
      - name: Install cargo-nextest
        uses: taiki-e/install-action@c2927f0c5b5adc6a76bc4a7847bc6e0503754bed
        with:
          tool: cargo-nextest
      - name: Check packages and dependencies for errors
        run: cargo check --locked --all-targets

  # Minimum Supported Rust Version
  cache_rust_msrv:
    name: cache rust / msrv
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b
      - id: msrv
        name: Get MSRV from package metadata
        run: awk -F '"' '/rust-version/{ print "version=" $2 }' Cargo.toml >> "$GITHUB_OUTPUT"
      - name: Install ${{ steps.msrv.outputs.version }} Rust toolchain
        uses: dtolnay/rust-toolchain@d8352f6b1d2e870bc5716e7a6d9b65c4cc244a1a
        with:
          toolchain: ${{ steps.msrv.outputs.version }}
      - name: Install nightly Rust toolchain
        uses: dtolnay/rust-toolchain@d8352f6b1d2e870bc5716e7a6d9b65c4cc244a1a
        with:
          toolchain: nightly
      - name: Resolve minimal dependency versions instead of maximum
        run: cargo +nightly update -Z direct-minimal-versions
      - name: Set override to MSRV Rust
        run: rustup override set ${{ steps.msrv.outputs.version }}
      - name: Cache dependencies
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84
        with:
          shared-key: msrv-ubuntu-latest
        timeout-minutes: 5
      - name: Install cargo-nextest
        uses: taiki-e/install-action@c2927f0c5b5adc6a76bc4a7847bc6e0503754bed
        with:
          tool: cargo-nextest
      - name: Check packages and dependencies for errors
        run: cargo check --locked --all-targets
