name: preload caches / rust

on:
  workflow_call:

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings

jobs:
  cache_rust_stable:
    name: cache rust / stable
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7
        with:
          toolchain: stable
      - name: Cache dependencies
        uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43
        with:
          shared-key: stable-${{ matrix.platform }}
        timeout-minutes: 5
      - name: Install cargo-nextest
        uses: taiki-e/install-action@5b205dd5b807eef56fdbfeedeedcee63c5d44090
        with:
          tool: cargo-nextest
      - name: Check packages and dependencies for errors
        run: cargo check --locked --all-targets

  # Minimum Supported Rust Version
  cache_rust_msrv:
    name: cache rust / msrv
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - id: msrv
        name: Get MSRV from package metadata
        run: awk -F '"' '/rust-version/{ print "version=" $2 }' Cargo.toml >> "$GITHUB_OUTPUT"
      - name: Install ${{ steps.msrv.outputs.version }} Rust toolchain
        uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7
        with:
          toolchain: ${{ steps.msrv.outputs.version }}
      - name: Install nightly Rust toolchain
        uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7
        with:
          toolchain: nightly
      - name: Resolve minimal dependency versions instead of maximum
        run: cargo +nightly update -Z direct-minimal-versions
      - name: Set override to MSRV Rust
        run: rustup override set ${{ steps.msrv.outputs.version }}
      - name: Cache dependencies
        uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43
        with:
          shared-key: msrv-ubuntu-latest
        timeout-minutes: 5
      - name: Install cargo-nextest
        uses: taiki-e/install-action@5b205dd5b807eef56fdbfeedeedcee63c5d44090
        with:
          tool: cargo-nextest
      - name: Check packages and dependencies for errors
        run: cargo check --locked --all-targets
