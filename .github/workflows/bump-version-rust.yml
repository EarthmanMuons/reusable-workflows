name: bump version / rust

on:
  workflow_call:
    inputs:
      package:
        description: Cargo package
        required: true
        type: string
      level:
        # https://github.com/crate-ci/cargo-release/blob/master/docs/reference.md#bump-level
        description: Bump level
        required: true
        type: string
    secrets:
      APP_ID:
        description: GitHub App installation ID
        required: true
      APP_PRIVATE_KEY:
        description: GitHub App private key
        required: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings

jobs:
  prepare_next_release:
    name: prepare next release
    runs-on: ubuntu-latest
    steps:
      - id: generate_token
        name: Generate a GitHub App token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout source code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          ref: main
          fetch-depth: 0

      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7
        with:
          toolchain: stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8
        with:
          shared-key: stable-ubuntu-latest
        timeout-minutes: 5

      - name: Install cargo-release
        uses: taiki-e/install-action@5b205dd5b807eef56fdbfeedeedcee63c5d44090
        with:
          tool: cargo-release

      - name: Update cargo dependencies for package ${{ inputs.package }}
        run: cargo update --package "${{ inputs.package }}"

      - name: Bump ${{ inputs.level }} version for package ${{ inputs.package }}
        run: cargo release version -v --execute --no-confirm --package "${{ inputs.package }}" "${{ inputs.level }}"

      - name: Perform pre-release replacements
        run: cargo release replace -v --execute --no-confirm --package "${{ inputs.package }}"

      - name: Fix up CHANGELOG formatting
        run: npx --yes prettier@latest --color --prose-wrap always --write -- **/CHANGELOG.md

      - name: Get the new release version
        run: |-
          version=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[] | select(.name == "${{ inputs.package }}") | .version')
          echo "release_version=${version}" >> "$GITHUB_ENV"

      - id: cpr
        name: Create pull request
        uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38
        with:
          token: ${{ steps.generate_token.outputs.token }}
          branch-suffix: timestamp
          commit-message: Prepare ${{ inputs.package }} v${{ env.release_version }} ${{ inputs.level }} release
          title: Prepare ${{ inputs.package }} v${{ env.release_version }} ${{ inputs.level }} release
          body: |-
            This PR was automatically created by the [bump-version](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) workflow, which ran the following commands:


            ```
            $ cargo update --package ${{ inputs.package }}
            $ cargo release version --execute --package ${{ inputs.package }} ${{ inputs.level }}
            $ cargo release replace --execute --package ${{ inputs.package }}
            $ prettier --prose-wrap always --write -- **/CHANGELOG.md
            ```

            **Please review the submitted changes.**

            Once this PR is merged into the _main_ branch, an automated process will tag the commit.

      - name: Annotate workflow run with PR URL
        run: |-
          echo "### :shipit: Opened pull request for ${{ inputs.package }} v${{ env.release_version }}:" >> "$GITHUB_STEP_SUMMARY"
          echo "- ${{ steps.cpr.outputs.pull-request-url }}" >> "$GITHUB_STEP_SUMMARY"
