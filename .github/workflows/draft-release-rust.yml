name: draft release / rust

on:
  workflow_call:
    inputs:
      package:
        description: Cargo package
        required: true
        type: string

permissions:
  contents: write

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings

jobs:
  create_draft_release:
    name: create draft release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.gh_release.outputs.upload_url }}
      url: ${{ steps.gh_release.outputs.url }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - id: gh_release
        name: Create a new GitHub draft release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          draft: true
          generate_release_notes: true
      - name: Annotate workflow run with draft release URL
        run: 'echo "### :shipit: Opened draft release for: [${{ inputs.package }} ${{ github.ref_name }}](${{ steps.gh_release.outputs.url }})" >> "$GITHUB_STEP_SUMMARY"'

  upload_release_assets:
    name: upload release assets
    needs:
      - create_draft_release
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
            build_tool: cargo
          - target: aarch64-pc-windows-msvc
            os: windows-latest
            build_tool: cargo
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            build_tool: cross
          - target: x86_64-apple-darwin
            os: macos-latest
            build_tool: cargo
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            build_tool: cargo
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            build_tool: cargo
    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: Install musl tools
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y musl-tools
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
      - name: Cache dependencies
        uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8
        with:
          shared-key: stable-ubuntu-latest
        timeout-minutes: 5
      - name: Install cross
        if: matrix.os == 'ubuntu-latest'
        uses: taiki-e/install-action@ccc14bdc8d34cddf54e4f9fb2da0c208427207a3
        with:
          tool: cross
      - name: Building release assets
        run: |-
          if [[ "${{ matrix.build_tool }}" == "cross" ]]; then
          	cargo xtask dist --target "${{ matrix.target }}" --cross
          else
          	cargo xtask dist --target "${{ matrix.target }}"
          fi
      - name: Uploading release assets
        run: |-
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            extension="zip"
          else
            extension="tar.gz"
          fi
          filename="${{ inputs.package }}-${GITHUB_REF_NAME:1}-${{ matrix.target }}.${extension}"
          echo "Uploading ${filename} to: ${{ needs.create_draft_release.outputs.upload_url }}"
          gh release upload "$GITHUB_REF_NAME" "target/dist/${filename}"
          echo ":arrow_up: Uploaded release asset ${filename}" >>"$GITHUB_STEP_SUMMARY"
